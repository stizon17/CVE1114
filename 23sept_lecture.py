from ast import If
from dis import dis
from re import I, X
from socket import if_indextoname

## Activity 6.1
# weather = "sunny"
# if weather == "rain" :
#     print("bring your umbrella")
# elif weather == "fine dust":
#     print("bring a mask")
# else:
#     print("weather is nice!")

# temp = int(input("please type in today temperature: "))
# if temp >= 35:
#     print(" stay home")
# elif 30<=temp<= 34:
#     print("outdoor activities")
# else: 
#     print("cold")

# order = float(input("enter your order: "))
# discount = 25 if order >= 100 else 0
# disc_amount = discount / 100 * order 
# pay = order - disc_amount 
# print("THe discount amount is {0: 1f}" .format(disc_amount))
# print(f"The payment is {pay: 0.1f}")

## Activity 6.2
# for I in [0,1,2,3,4]:
#     print("Q number : {}" .format(I))

# for I in range(11): 
#     print("Q  number : {}" .format(I))

# print(list(range(5,11)))
# for I in range(5,11):
#     print("Q number: {}" .format(I))

# star_Q = ["kim", "lee", "andrew", "john"]
# print(type(star_Q))
# for c in star_Q:
#     print("{}, your item is now ready" .format(c))

# n =5
# while n>0:
#     n -=1
#     print(n)

#Activity 6.3
# customer = "Kim"
# index = 3
# while index >= 1:
#     print("{}, your order is ready. {}th calling" .format(customer,index))
#     index -=1
#     if index == 0:
#         print("your order was cancelled.")

# print(list(range(1,11)))
# squares = [I*I for I in range(1,11)]
# print(squares)

# from random import *
# count = 0
# for I in range(0,51):
#     time = randrange(5,51)

#     if 5 <=time<= 15:
#         print("[o] the first {}th custormer travel time: {} mins" .format(I,time))
#         count +=1
#     else :
#         print("[x] the {} customer travel time: {} mins." .format(I,time))
# print("Total customers you served: {}customers." .format(count))

#Activity 7.1
## Functions 
# def f(x):
#     y = x + 20
#     print("the output of the function is {}" .format(y))
#     return y
# f(5)

##The future value (FV) calculation allows investors to predict
## with varying degrees of accuracy.
## the amount of profit that can be generated by different investments.
## Create a function for computing the future value given by:
## FV = PV * ((1 + r) ** n)
## where PV Present value, r: annual interest reate, n: number of years
# def FV(pv, r, n):
#     fv =  pv*((1+r/100)**n)

#     print("your future value is {0:2f}" .format(fv))
#     return round(fv,2)

# pv = int(input("enter your present value"))
# r = int(input("enter annual interests rate: %"))
# n = int(input("enter  number of years"))
# FV (pv, r, n)10

# def purchase(order):
#     discount = 25 if order >200 else 0
#     disc_amount = discount / 100 * order
#     tax = 0.07 * (order - disc_amount)
#     return disc_amount, round(tax,3)

# order = float(input("enter your order"))
# disc, t = purchase(order)
# print(f"total discount amount is {disc} and tax is {t:0.1f}")

# def f(x):
#     x += 1
#     print(x)
#     return x
# f(2)

# example = lambda x: x + 1
# print(example(2))

# # Activity 7.2
# # Lambda function
# sum = lambda x,y: x + y
# print(sum(2,3))

# f = lambda x,y : 10 * x +  y
# def g(f,x,y=0):
#     return f(x,y)
# print (g(f,4))
# print(g(f,5,2))

# Activity  7.3
# Map Function
a = list(range(2,5))
print(list(map(lambda x: x**2,a)))

list_1= [1,2,3,4]
list_2= [10,20,30,40]
print(list(map(lambda x,y: x + y, list_1, list_2)))

list_3= [100, 200, 300, 400]
print(list(map(lambda x,y,z: x + y + z, list_1, list_2, list_3)))